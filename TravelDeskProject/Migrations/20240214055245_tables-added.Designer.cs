// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TravelDeskProject.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20240214055245_tables-added")]
    partial class tablesadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelDeskProject.Models.AirTicketBooking", b =>
                {
                    b.Property<int>("AirTicketBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirTicketBookingId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("PassportNo")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AirTicketBookingId");

                    b.HasIndex("FlightTypeId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RequestId");

                    b.ToTable("AirTicketBookings");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("BookingTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingTypeName = "Air ticket Only",
                            CreateBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false
                        },
                        new
                        {
                            BookingId = 2,
                            BookingTypeName = "Hotel Only",
                            CreateBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false
                        },
                        new
                        {
                            BookingId = 3,
                            BookingTypeName = "Both",
                            CreateBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6181),
                            DepartmentName = "IT",
                            IsActive = false
                        },
                        new
                        {
                            DepartmentId = 2,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6182),
                            DepartmentName = "Sales",
                            IsActive = false
                        },
                        new
                        {
                            DepartmentId = 3,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6184),
                            DepartmentName = "HR",
                            IsActive = false
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.FlightType", b =>
                {
                    b.Property<int>("FlightTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightTypeId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("FlightTypeId");

                    b.ToTable("FlightTypes");

                    b.HasData(
                        new
                        {
                            FlightTypeId = 1,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6118),
                            FlightTypeName = "Domestic",
                            IsActive = false
                        },
                        new
                        {
                            FlightTypeId = 2,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6121),
                            FlightTypeName = "International",
                            IsActive = false
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.HotelBooking", b =>
                {
                    b.Property<int>("HotelBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelBookingId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MealPreferenceId")
                        .HasColumnType("int");

                    b.Property<int>("MealTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDays")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("HotelBookingId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MealPreferenceId");

                    b.HasIndex("MealTypeId");

                    b.HasIndex("RequestId");

                    b.ToTable("HotelBookingTypes");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            City = "Noida",
                            Country = "India",
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6159),
                            IsActive = false
                        },
                        new
                        {
                            LocationId = 2,
                            City = "Pune",
                            Country = "India",
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6161),
                            IsActive = false
                        },
                        new
                        {
                            LocationId = 3,
                            City = "London",
                            Country = "England",
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6162),
                            IsActive = false
                        },
                        new
                        {
                            LocationId = 4,
                            City = "Dubai",
                            Country = "United Arab Emirates",
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6163),
                            IsActive = false
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.MealPreferenceType", b =>
                {
                    b.Property<int>("MealPreferenceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealPreferenceTypeId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MealPreferenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("MealPreferenceTypeId");

                    b.ToTable("MealPreferenceTypes");

                    b.HasData(
                        new
                        {
                            MealPreferenceTypeId = 1,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(5927),
                            IsActive = false,
                            MealPreferenceName = "Veg"
                        },
                        new
                        {
                            MealPreferenceTypeId = 2,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(5946),
                            IsActive = false,
                            MealPreferenceName = "Non-Veg"
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.MealType", b =>
                {
                    b.Property<int>("MealTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealTypeId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MealTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("MealTypeId");

                    b.ToTable("MealTypes");

                    b.HasData(
                        new
                        {
                            MealTypeId = 1,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6077),
                            IsActive = false,
                            MealTypeName = "Lunch"
                        },
                        new
                        {
                            MealTypeId = 2,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6078),
                            IsActive = false,
                            MealTypeName = "Dinner"
                        },
                        new
                        {
                            MealTypeId = 3,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6079),
                            IsActive = false,
                            MealTypeName = "Both"
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int>("AadharNo")
                        .HasColumnType("int");

                    b.Property<int>("BookingTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForTravelling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("BookingTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6201),
                            IsActive = false,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6203),
                            IsActive = false,
                            RoleName = "HRAdmin"
                        },
                        new
                        {
                            RoleId = 3,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6204),
                            IsActive = false,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleId = 4,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6205),
                            IsActive = false,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StatusId");

                    b.ToTable("Statuss");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6137),
                            IsActive = false,
                            StatusName = "Pending"
                        },
                        new
                        {
                            StatusId = 2,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6139),
                            IsActive = false,
                            StatusName = "Rejected"
                        },
                        new
                        {
                            StatusId = 3,
                            CreateBy = 0,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6140),
                            IsActive = false,
                            StatusName = "Approved"
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Mzp",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6229),
                            DepartmentId = 1,
                            Email = "priya@gmail.com",
                            FirstName = "Priya",
                            IsActive = true,
                            LastName = "Jaiswal",
                            MobileNumber = "6306788371",
                            Password = "Priya@123",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Delhi",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 2, 14, 11, 22, 45, 326, DateTimeKind.Local).AddTicks(6233),
                            DepartmentId = 2,
                            Email = "erica@gmail.com",
                            FirstName = "Erica",
                            IsActive = true,
                            LastName = "Attal",
                            ManagerId = 1,
                            MobileNumber = "9090909090",
                            Password = "Erica@123",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("TravelDeskProject.Models.AirTicketBooking", b =>
                {
                    b.HasOne("TravelDeskProject.Models.FlightType", "FlightType")
                        .WithMany()
                        .HasForeignKey("FlightTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.Request", null)
                        .WithMany("AirTickets")
                        .HasForeignKey("RequestId");

                    b.Navigation("FlightType");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TravelDeskProject.Models.HotelBooking", b =>
                {
                    b.HasOne("TravelDeskProject.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.MealPreferenceType", "MealPreference")
                        .WithMany()
                        .HasForeignKey("MealPreferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.MealType", "MealType")
                        .WithMany()
                        .HasForeignKey("MealTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.Request", "Request")
                        .WithMany("Hotels")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("MealPreference");

                    b.Navigation("MealType");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Request", b =>
                {
                    b.HasOne("TravelDeskProject.Models.Booking", "BookingType")
                        .WithMany()
                        .HasForeignKey("BookingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingType");

                    b.Navigation("Department");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelDeskProject.Models.User", b =>
                {
                    b.HasOne("TravelDeskProject.Models.Department", "Department")
                        .WithMany("User")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelDeskProject.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("TravelDeskProject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Department", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Request", b =>
                {
                    b.Navigation("AirTickets");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("TravelDeskProject.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
